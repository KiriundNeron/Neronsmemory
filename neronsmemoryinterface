<!DOCTYPE html>
<html lang="de">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Neróns Gedächtnis Interface</title>
<style>
  body { font-family: Arial, sans-serif; margin: 1rem; background: #f0f8ff; }
  h1 { color: #2a5d84; }
  #entries { margin-top: 1rem; }
  .entry { background: white; border: 1px solid #ccc; padding: 0.5rem; margin-bottom: 0.5rem; cursor: pointer; border-radius: 5px; }
  .entry:hover { background: #d9ebff; }
  #details { margin-top: 1rem; background: white; border: 1px solid #aaa; padding: 1rem; border-radius: 5px; }
  label { display: block; margin-top: 1rem; font-weight: bold; }
  input[type="text"], textarea { width: 100%; padding: 0.4rem; margin-top: 0.2rem; border-radius: 4px; border: 1px solid #ccc; }
  button { margin-top: 1rem; background: #2a5d84; color: white; border: none; padding: 0.5rem 1rem; border-radius: 4px; cursor: pointer; }
  button:hover { background: #235073; }
</style>
</head>
<body>

<h1>Neróns Gedächtnis</h1>
<div id="entries">Lade Einträge...</div>

<div id="details" style="display:none;">
  <h2>Eintrag Details</h2>
  <div id="entry-title"></div>
  <div id="entry-content" style="white-space: pre-wrap; margin-top: 0.5rem;"></div>
</div>

<div id="new-entry">
  <h2>Neuen Eintrag hinzufügen</h2>
  <label for="new-title">Titel:</label>
  <input type="text" id="new-title" />
  <label for="new-content">Inhalt:</label>
  <textarea id="new-content" rows="5"></textarea>
  <button id="add-entry">Hinzufügen</button>
</div>

<script>
  const memoryURL = 'https://raw.githubusercontent.com/KiriundNeron/Neronsmemory/refs/heads/main/neronsmemory.json';

  let memoryData = [];

  // Lade JSON vom Server
  async function loadMemory() {
    try {
      const response = await fetch(memoryURL);
      if(!response.ok) throw new Error('Netzwerkfehler');
      const data = await response.json();
      memoryData = data;

      // Prüfe auf lokale Updates (LocalStorage)
      const localUpdates = JSON.parse(localStorage.getItem('neronMemoryUpdates') || '[]');
      memoryData = memoryData.concat(localUpdates);

      renderEntries();
    } catch(e) {
      document.getElementById('entries').innerText = 'Fehler beim Laden: ' + e.message;
    }
  }

  // Zeige Liste der Einträge
  function renderEntries() {
    const container = document.getElementById('entries');
    if(memoryData.length === 0) {
      container.innerText = 'Keine Einträge vorhanden.';
      return;
    }
    container.innerHTML = '';
    memoryData.forEach((entry, index) => {
      const div = document.createElement('div');
      div.className = 'entry';
      div.textContent = entry.title || '(Ohne Titel)';
      div.onclick = () => showDetails(index);
      container.appendChild(div);
    });
  }

  // Zeige Details eines Eintrags
  function showDetails(index) {
    const entry = memoryData[index];
    document.getElementById('entry-title').textContent = entry.title || '(Ohne Titel)';
    document.getElementById('entry-content').textContent = entry.content || '(Kein Inhalt)';
    document.getElementById('details').style.display = 'block';
  }

  // Neuen Eintrag hinzufügen
  function addEntry() {
    const titleInput = document.getElementById('new-title');
    const contentInput = document.getElementById('new-content');

    const newEntry = {
      title: titleInput.value.trim(),
      content: contentInput.value.trim()
    };

    if(!newEntry.title) {
      alert('Bitte gib einen Titel ein.');
      return;
    }

    memoryData.push(newEntry);

    // Speichere im LocalStorage (temporär)
    let localUpdates = JSON.parse(localStorage.getItem('neronMemoryUpdates') || '[]');
    localUpdates.push(newEntry);
    localStorage.setItem('neronMemoryUpdates', JSON.stringify(localUpdates));

    renderEntries();
    titleInput.value = '';
    contentInput.value = '';
    document.getElementById('details').style.display = 'none';
  }

  document.getElementById('add-entry').addEventListener('click', addEntry);

  loadMemory();
</script>

</body>
</html>
